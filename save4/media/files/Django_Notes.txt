apt-get install python3-pip
pip3 install django
django-admin --version
pip3 install --upgrade django
pip3 install pillow
python3 -m django --version

pip3 install django-widget-tweaks
{% load widget_tweaks %}
'widget_tweaks',
{% csrf_token %}
{% for item in u_form %}
<div class="form-group">{{ item.name }}{% render_field item class="form-control" %}
{% endfor %}


django-admin
django-admin startproject <NAME>

python3 manage.py runserver
python3 manage.py runserver 45.33.69.207:80

python3 manage.py startapp <APP>
python3 manage.py makemigrations
python3 manage.py migrate
python3 manage.py createsuperuser
python3 manage.py sqlmigrate blog 0001





>>> from django.contrib.auth.models import User
>>> from users.models import Profile
>>> from fileshare.models import Files
>>> user = User.objects.filter(username="djodan")
>>> User.objects.get(id=1)





users = User.objects.all()
src="{{user.profile.image.url}}


#vid 3
def home(request):
	return render(request, 'blog/home.html', context)

IN HTML FILE
{% if title %}
	<title>Django Blog - {{ title }}</title>
{% else %}
	<title>Django Blog</title>
{% endif %}


{% for post in posts %}
	<h1>{{post.title}}</h1>
	<p>By {{post.author}}</p>
	<p>{{post.content}}</p>
{% endfor %}


DONE IN SEPARATE HTML FILE (base.html)
{% block content %} {% endblock %}


DONE IN HTML FILES
{% extends "blog/base.html %}
{% block content %}

        <h1>ABOUT PAGE!</h1>

{% endblock content %}



{% load static %}
<link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' %}"> // static folder located in root app dir

href= "{% url 'blog-home' %}" //// references provided in app urlpatterns
vs
href= "/blog/home" //// not reccomended. link is broken if name changes 

---------------------------------------------------------------------
				MODELS
from django.db import models
from django.utils import timezone

class Post(models.Model):
	title = models.CharField(max_length=100)
        content = models.TextField()
	author = models.ForeignKey(User, on_delete=models.CASCADE)
        date_posted = models.DataTimeField(default = timezone.now OR auto_now=True(last update) OR auto_now_add(date created no updates)=True)

def __str__(self):
                return self.title

-------------------------------------------------------------------------

python3 manage.py shell
>>> from blog.models import Post
>>> from django.contrib.auth.models import User
>>> User.objects.all()
<QuerySet [<User: jorden>, <User: testuser>]>
>>> User.objects.first()
<User: jorden>
>>> user = User.objects.first()
>>> user
<User: jorden>
>>> user.id
1
>>> user.pk
1
>>> user = User.objects.get(id=1)
>>> user
<User: jorden>
>>> post_1 = Post(title='Blog1', content='first post', author=user)
>>> post_1.save()
>>> Post.objects.all()
<QuerySet [<Post: Post object (1)>]>
exit() //// added the magic function to the models.py file

>>> from blog.models import Post
>>> from django.contrib.auth.models import User
>>> Post.objects.all()
<QuerySet [<Post: Blog1>]>

>>> user = User.objects.first()
>>> post_2 = Post(title = 'Blog 2', content='Second Post', author_id=user.id)
>>> post_2.save()
>>> Post.objects.all()
<QuerySet [<Post: Blog1>, <Post: Blog 2>]>

>>> post = Post.objects.first()
>>> post
<Post: Blog1>
>>> post.content
'first post'
>>> post.date_posted
datetime.datetime(2021, 2, 25, 16, 53, 43, 832357, tzinfo=<UTC>)
>>> post.author
<User: jorden>
>>> post.author.email
'alphared13@gmail.com'

>>> user.post_set.all()
<QuerySet [<Post: Blog1>, <Post: Blog 2>]>
user.post_set.create(title='Blog 3', content="Third Post")
<Post: Blog 3>
>>> user.post_set.all()
<QuerySet [<Post: Blog1>, <Post: Blog 2>, <Post: Blog 3>]>
>>> Post.objects.all()
<QuerySet [<Post: Blog1>, <Post: Blog 2>, <Post: Blog 3>]>

-----------------------------------------------------------------------------------------------
					APP admin.py
from django.contrib import admin
from .models import Post

# Register your models here.

admin.site.register(Post)
-----------------------------------------------------------------------------------------------


user.profile.image.width/height/size
user.profile.image // returns image location

{{user.name}}
{{user.email}}
{{user.profile.image.url}}

#messages.debug
#messages.info
#messages.success
#messages.warning
#messages.error































